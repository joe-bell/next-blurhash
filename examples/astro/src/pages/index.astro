---
import fs from "node:fs/promises";
import path from "node:path";
import { fileURLToPath } from "node:url";
import { getImage } from "astro:assets";
import { getPlaiceholder } from "plaiceholder";
import {
  exampleBody,
  exampleLink,
  exampleList,
  exampleListItem,
  exampleLQIP,
  exampleNav,
  exampleNavItem,
  exampleTitle,
} from "@plaiceholder/ui";
import { config } from "@/config";
import Layout from "@/layouts/Layout.astro";

const imageFiles = await Astro.glob("../assets/images/unsplash/*.{jpg,png}");

const getImagesWithPlaiceholder = async (files: Record<string, any>[]) =>
  Promise.all(
    files.map(async ({ default: file }) => {
      const { src, attributes } = await getImage({ src: file });

      const original = file.src.split("?")[0];
      const buffer = await fs.readFile(
        path.join(fileURLToPath(import.meta.url), "../../../", original)
      );

      const {
        metadata: { height, width },
        ...plaiceholder
      } = await getPlaiceholder(buffer);

      return { ...plaiceholder, img: { ...attributes, src, height, width } };
    })
  );

const images = await getImagesWithPlaiceholder(imageFiles);
---

<Layout variant="home" title="Astro">
  <ul role="list" class={exampleList()}>
    {
      Object.keys(config.examples.pages).map((example, i) => (
        <li class={exampleListItem()}>
          <div
            aria-hidden="true"
            class={exampleLQIP()}
            style={images[i]?.css}
          />
          <p class={exampleBody()}>
            <span class={exampleTitle()}>
              {
                config.examples.pages[
                  example as keyof typeof config.examples.pages
                ].title
              }
            </span>
          </p>

          <ul role="list" class={exampleNav()}>
            {Object.keys(config.examples.variants).map((variant) => {
              const href = `/${example}/${variant}`;
              return (
                <li class={exampleNavItem()}>
                  <a href={href} class={exampleLink()}>
                    {
                      config.examples.variants[
                        variant as keyof typeof config.examples.variants
                      ].title
                    }
                  </a>
                </li>
              );
            })}
          </ul>
        </li>
      ))
    }
  </ul>
</Layout>
