---
import { getImage, Image } from "astro:assets";
import { cx } from "class-variance-authority";
import { extractImgSrc } from "@plaiceholder/tailwindcss/utils";
import { imageList, imageListItem } from "@plaiceholder/ui";
import { config } from "@/config";
import Layout from "@/layouts/Layout.astro";

const title = config.examples.pages.tailwind.title;
const heading = config.examples.variants.multiple.title;

const getImagesWithPlaiceholder = (...classNames: string[]) =>
  Promise.all(
    classNames.map(async (plaiceholder) => {
      const filename = extractImgSrc(plaiceholder);

      const { default: file } = await import(
        /* vite-ignore */
        `../../../src/assets/images/${filename}.jpg`
      );

      const { src, attributes } = await getImage({ src: file });

      return { plaiceholder, img: { ...attributes, src } };
    })
  );

const images = await getImagesWithPlaiceholder(
  "plaiceholder-[unsplash-alexander-ant-oR7HxvOe2YE]",
  "plaiceholder-[unsplash-alexander-ant-r7xdS9hjYYE]",
  "plaiceholder-[unsplash-solen-feyissa-0KXl7T2YU0I]",
  "plaiceholder-[unsplash-solen-feyissa-ju3ZBdiXzmA]",
  "plaiceholder-[unsplash-solen-feyissa-tek55norwaQ]",
  "plaiceholder-[unsplash-solen-feyissa-WX1siNmyR4]"
);
---

<Layout variant="example" title={title} heading={heading}>
  <ul role="list" class={imageList({ columns: 3, aspect: "5/7" })}>
    {
      images.map(({ plaiceholder, img }) => (
        <li class={imageListItem()}>
          <div
            class={cx(
              plaiceholder,
              "absolute",
              "inset-0",
              "w-full",
              "h-full",
              "transform",
              "scale-150",
              "filter",
              "blur-2xl",
              "z-[-1]"
            )}
          />

          {/* `getImage()` *does* provide width/height, but `Image` disagrees */}
          <Image
            {...img}
            alt="Paint Splashes"
            title="Photo from Unsplash"
            loading="lazy"
            width={
              // @ts-expect-error
              img.width
            }
            height={
              // @ts-expect-error
              img.height
            }
          />
        </li>
      ))
    }
  </ul>
</Layout>
